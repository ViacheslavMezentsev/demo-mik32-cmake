/**
 * @file
 * Сторожевой таймер шины
 * 
 * Сторожевой таймер шины предотвращает блокировку системы ведомым устройством AHB. 
 * Модуль состоит из регистров управления и трех мониторов шины, 
 * подключенных к шинам EEPROM, SPIFI, шине перефирийных устройств. 
 * Мониторы размещаются между матрицей шины и ведромым устройством. 
 * Если есть активная передача на ведомое устройство, и ведомое устройство удерживает HREADY 
 * в значении «0» более определенного количества тактов, сторожевой таймер выполняет следующие действия:
 * - формирует для ведущего признак ошибки на шине (HRESP = «1»);
 * - формирует прерывание (если для указанного ведомого оно разрешено);
 * - формирует сигнал сброса ведомого.
 * Если мастер шины формирует последующий запрос к этому ведомому устройству, 
 * монитор возвращает ответ об ошибке и блокирует доступ к ведомому устройству. 
 * Монитор прекращает формировать сообщения об ошибках и маскировать доступ к ведомому, 
 * когда ведомое завершает передачу, устанавливая HREADY в «1». 
 * Если идет пакетная передача, маскируется оставшиеся транзакции в пакетной передаче
 */

#ifndef WDT_BUS_H_INCLUDED
#define WDT_BUS_H_INCLUDED

#define WDT_BUS_TIMEOUT         0x00
#define WDT_BUS_INT_CLEAR       0x04
#define WDT_BUS_ENABLE          0x08


/// Смещение для монитора шины EEPROM
#define WDT_BUS_EEPROM_S        2
/// Смещение для монитора шины SPIFI
#define WDT_BUS_SPIFI_S         1
/// Смещение для монитора шины периферийных устройств
#define WDT_BUS_DOM3_S          0

//TODO: Отсутствует описание битовых масок регистров. Вероятно смещения указанные выше относятся к каждому регистру 

#ifndef __ASSEMBLER__
    #include <inttypes.h>
    /// @brief Структура регистров сторожевого таймера шины
    typedef struct
    {
        volatile uint32_t TIMEOUT;          ///< [RW]: Определяет количество циклов ожидания до формирования ошибки.
        volatile uint32_t INT_CLEAR;        ///< [W1C]: Сброс прерывания
        volatile uint32_t ENABLE;           ///< [RW]: Запуск/отключение мониторов шины. 
    } WDT_BUS_TypeDef;
#endif

#endif // OTP_H_INCLUDED

